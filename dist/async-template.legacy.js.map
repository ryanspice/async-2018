{"version":3,"sources":["webpack://async-template-legacy-library/webpack/universalModuleDefinition","webpack://async-template-legacy-library/webpack/bootstrap","webpack://async-template-legacy-library/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://async-template-legacy-library/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://async-template-legacy-library/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","webpack://async-template-legacy-library/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack://async-template-legacy-library/./node_modules/@babel/runtime/regenerator/index.js","webpack://async-template-legacy-library/./node_modules/loglevel/lib/loglevel.js","webpack://async-template-legacy-library/./src/core/def/loop.js","webpack://async-template-legacy-library/./src/core/def/pipe.js","webpack://async-template-legacy-library/./src/core/def/utils.js","webpack://async-template-legacy-library/./src/core/template/empty.data.js","webpack://async-template-legacy-library/./src/core/index.js","webpack://async-template-legacy-library/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","this","args","arguments","apply","err","undefined","obj","configurable","writable","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","toString","keys","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","TypeError","pushTryEntry","locs","iteratorMethod","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","noop","undefinedType","logMethods","bindMethod","methodName","replaceLoggingMethods","level","loggerName","methodFactory","log","debug","defaultMethodFactory","console","realMethod","Logger","defaultLevel","currentLevel","storageKey","getPersistedLevel","storedLevel","localStorage","ignore","cookie","document","location","encodeURIComponent","exec","levels","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","toUpperCase","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","getLoggers","_loop_iterator","_data","_length","_iterator","_action","_dataMap","_template","id","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default","_dataTemplate","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","_callee","data","_context","_x","_x2","_layer","_ref2","_callee2","_context2","_iteratorId","_loop","_ref3","_callee3","action","_context3","t0","t1","_x3","_x4","trace","_props","pipe","template","pre","post","_this","item","element","createElementOfType","elms","elements","temp","elm","renderTo","scrollcount","children","appendChild","appendBefore","parentNode","insertBefore","appendAfter","nextSibling","ors","onreadystatechange","readyState","init","evt","iterateTemplate","warn","loop","createTemplateItem","check","defer","filter","ref","createRenderTarget","target","createElement","afterConstruct","innerHTML","head","oninput","onclick","stopPropagation","eval","setAttribute","style","populateProps","props","querySelectorAll","body","prop","insertAfter","newNode","__webpack_exports__","core"],"mappings":"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","file":"async-template.legacy.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"async-template-legacy-library\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"async-template-legacy-library\"] = factory();\n\telse\n\t\troot[\"async-template-legacy-library\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","module.exports = require(\"regenerator-runtime\");\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","//@flow\r\n\r\n/*\r\n\tself contained, loop\r\n*/\r\n\r\nlet _data:__data = [];\r\n\r\nlet _loop_iterator: number;\r\n\r\nlet _length: number = 0;\r\nlet _iterator: number = 0;\r\nlet _iteratorId: number = 0;\r\n\r\nlet trace:number = 0;\r\n\r\n/**/\r\n\r\nlet _action: Function = () => { };\r\n\r\n/**/\r\n\r\nconst _dataMap: __dataMap = [];\r\n\r\n/**/\r\n\r\nclass _template {\r\n\tid:number;\r\n\tvalue:Object;\r\n\tconstructor(id:number, value:Object){\r\n\t\tthis.id = id;\r\n\t\tthis.value = value;\r\n\t\treturn (this:__template);\r\n\t}\r\n}\r\n\r\n/**/\r\n\r\nconst _dataTemplate = async function(i:number, data:Object):__template {\r\n\r\n\treturn await (_dataMap[i] = await new _template(i,data));\r\n}\r\n\r\n/**/\r\n\r\nconst _layer = async function():__layer {\r\n\r\n\t_iteratorId++;\r\n\t_data[_iterator] = await (_dataTemplate(_iterator, _data[_iterator]));\r\n\r\n\treturn _data[_iterator];\r\n}\r\n\r\n/**/\r\n\r\nconst _loop = async function(data:Array<__data>,action:Function) {\r\n\r\n\tif (_data===null){\r\n\r\n\t\t_loop_iterator = _data.length = 0;\r\n\t\t\r\n\t\tfor (_loop_iterator; _loop_iterator >= 0; _loop_iterator--){\r\n\r\n\t\t\t_data[_loop_iterator] = _dataTemplate(-1,{});\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\t_data = data[0]; \r\n\t_length = _data.length || 0;\r\n\t_action = action;\r\n\r\n\tfor(_iterator; _iterator<_length;_iterator++){\r\n\r\n\t\tawait _action(await _layer());\r\n\r\n\t}\r\n\r\n\t_iterator = 0;\r\n\r\n};\r\n\r\n/**/\r\n\r\nexport default _loop;","//@flow\r\n\r\nimport { default as loop } from './loop';\r\n\r\nimport log from 'loglevel';\r\nlog.info('async.2018 :: ./core/def/pipe.js');\r\n\r\nimport data from '../template/empty.data';\r\n\r\nlet trace: number = 0;\r\n\r\nconst _props: Array<string> = [\r\n    'id',\r\n    'ref',\r\n    'value',\r\n    'class',\r\n    'className',\r\n    'click',\r\n    'onclick',\r\n    'onresize',\r\n    'oninput',\r\n    'activity',\r\n    `innerHTML`\r\n];\r\n\r\n\r\nclass pipe {\r\n\r\ncontext:Document = document;\r\n\r\ntemplate:Array<any> = data;\r\nprops:Array<string> = _props;\r\n\r\nelms:Array<any> = [];\r\ndefer:Array<any> = [];\r\nelements:Array<any> = [];\r\n\r\ntrace:number = 0;\r\nscrollcount:number = 0;\r\n\r\nconstructor(template: TemplateScheme, pre: Function = () => { }, post: Function = () => { }){\r\n\r\n\r\n    const ors = this.context.onreadystatechange;\r\n\r\n    this.context.state = 0;\r\n\r\n    if (this.context.readyState === \"complete\") {\r\n\r\n        if (ors) {\r\n\r\n            ors();\r\n\r\n        }\r\n\r\n        pre();\r\n\r\n        post();\r\n\r\n        this.template[0] = template;\r\n\r\n        this.init();\r\n\r\n        return;\r\n    }\r\n\r\n    this.context.onreadystatechange = async (evt: Event) => {\r\n\r\n        if (ors) {\r\n\r\n            ors();\r\n\r\n        }\r\n\r\n        switch (this.context.state) {\r\n\r\n            case 0:\r\n\r\n                pre();\r\n\r\n                this.context.state++;\r\n\r\n                break;\r\n\r\n            case 1:\r\n\r\n                post();\r\n\r\n                this.context.state++;\r\n\r\n                this.template[0] = template;\r\n\r\n                this.init();\r\n\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    return;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nasync init(): Promise < boolean > {\r\n\r\n    this.context = document;\r\n    \r\n    return await this.iterateTemplate();\r\n}\r\n\r\n/*\r\n    Iterate template data and generate html\r\n*/\r\n\r\nasync iterateTemplate(): Promise < boolean > {\r\n\r\n    log.info('iterateTemplate' + trace, this.template);\r\n\r\n    if(trace) {\r\n\r\n        log.warn(`renderer::` + trace);\r\n\r\n        return false;\r\n    }\r\n\r\n\t\ttrace++;\r\n\r\n        await loop(this.template, this.createTemplateItem);\r\n        //return;\r\n    await loop(this.template, this.check);\r\n\r\n    this.elms = await this.defer;\r\n\r\n    //TODO: recursive\r\n    await loop([this.defer], this.createTemplateItem);\r\n    await loop(this.template, this.check);\r\n\r\n    this.elms = this.defer;\r\n\r\n    if((this.defer = await this.elms.filter(elm => elm ? elm.ref : null)).length > 0) {\r\n\r\n    trace--;\r\n\r\n    this.template = await[this.defer];\r\n    this.defer = [];\r\n    this.elms = await[];\r\n\r\n    return await this.iterateTemplate();\r\n\r\n}\r\n\r\nreturn true;\r\n\t}\r\n\r\n/*\r\n    Create a DOM element in memory\r\n*/\r\n\r\nasync createElementOfType(template: TemplateElement): Promise < any > {\r\n\r\n    const type: string | null = template.type;\r\n\r\n    if(!type) {\r\n        log.warn('Async.2018 tried to render an `undefined` element');\r\n    }\r\n\r\n\t\tconst target: Element | string = await this.createRenderTarget(template);\r\n\r\n    if(!target) {\r\n        log.warn('Async.2018 cannot find a target to render to');\r\n    }\r\n\r\n\t\tconst elm: HTML5Element = (await this.context.createElement(template.type): HTML5Element);\r\n\r\n    if(!elm) {\r\n        log.warn('Async.2018 could not create element', template);\r\n    }\r\n\r\n\t\telm.ref = template.ref;\r\n    elm.afterConstruct = template.afterConstruct;\r\n\r\n    switch(type) {\r\n\r\n\t\t\tcase \"style\":\r\n\r\n            elm.innerHTML = template.value;\r\n            elm.renderTo = await this.context.head;\r\n            \r\n    break;\r\n\r\n    default:\r\n\r\n        elm.oninput = template.oninput;\r\n\r\n    if(template.onclick) {\r\n\r\n        elm.onclick = (evt) => {\r\n\r\n            evt.stopPropagation();\r\n\r\n            if (typeof template.onclick == 'function') {\r\n\r\n                template.onclick();\r\n\r\n            } else {\r\n\r\n\r\n                console.warn('eval disabled')\r\n                eval(template.onclick);\r\n\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    elm.setAttribute(\"style\",template.style);\r\n    elm.value = template.value;\r\n    elm.renderTo = target;\r\n    \r\n    break;\r\n}\r\n\r\n//Defer template item\r\n\r\nif (target === '2430') {\r\n\r\n    await this.defer.push(template);\r\n\r\n    return false;\r\n}\r\n\r\n//Populate Props\r\n\r\nawait this.populateProps(this.props, template, elm);\r\n\r\n//EVENT HOOK: afterConstruct\r\nthis.afterConstruct(elm);\r\n\r\nreturn elm;\r\n\t}\r\n\r\n/*\r\n    Generate a reference to the target element, or body if none\r\n*/\r\n\r\nasync createRenderTarget(template: TemplateElement): Promise < Element | string > {\r\n\r\n    //Verify if rendering target exists\r\n    if(template.renderTo != undefined)\r\nif (this.context.querySelectorAll(template.renderTo)[0] == undefined) {\r\n\r\n    return '2430';\r\n}\r\n\r\n//Return querySelected element, fallback on body\r\n//\t\tif (template.renderTo!=undefined)\r\nreturn this.context.querySelectorAll(template.renderTo)[0] || this.context.body;\r\n\t}\r\n\r\n/*\r\n    Populate data props on elements\r\n*/\r\n\r\nasync populateProps(props: Array < string >, template: __layer, elm: __layer) {\r\n\r\n    for (let prop in (props: any)) {\r\n\r\n        const temp: string = props[(prop: any)];\r\n\r\n        if (template[temp]) {\r\n            elm[temp] = template[temp];\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/*\r\n    Generate elements based on TemplateItem\r\n*/\r\n\r\ncreateTemplateItem = async (item: TemplateItem) => {\r\n\r\n    const element: TemplateElement = await this.createElementOfType(item.value);\r\n\r\n    if ((element)) {\r\n        this.elms[item.id] = (this.elements[item.id]) = element;\r\n\r\n        element.template = item.id;\r\n\r\n    } else {\r\n\r\n        // if debugger warning true :: defered :: console.log('false')\r\n        //console.warn('aw',this);\r\n    }\r\n\r\n}\r\n\r\n/*\r\n    VALIDATION\r\n*/\r\n\r\ncheck = async (temp: TemplateScheme) => {\r\n\r\n    const id: number = temp.id;\r\n\r\n    let elm: TemplateElement = this.elms[id];\r\n\r\n    if ((elm) && (elm.renderTo)) {\r\n\r\n        switch (typeof elm.renderTo) {\r\n\r\n            case \"string\":\r\n\r\n                let a = this.elms[id];\r\n                elm = this.elms[id] = await this.createElementOfType(a);\r\n\r\n                break;\r\n        }\r\n\r\n        this.scrollcount++;\r\n\r\n        ///NOT FOR PROD\r\n\r\n        if (elm.renderTo.id == 'scroll') {\r\n\r\n            if (elm.renderTo.children.length == 0) {\r\n\r\n                elm.renderTo.appendChild(elm, null);\r\n\r\n                return;\r\n            }\r\n\r\n            elm.renderTo.appendBefore = (element, t) => {\r\n                element.parentNode.insertBefore(t, element);\r\n            };\r\n\r\n            elm.renderTo.appendAfter = (element, t) => {\r\n                element.parentNode.insertBefore(t, element.nextSibling);\r\n            };\r\n\r\n            //APPEND PLUS ( usually at end ) TAKEOUT\r\n\r\n            if (elm.id == \"plus\") {\r\n\r\n                elm.renderTo.appendBefore(elm.renderTo.children[0], elm);\r\n\r\n                return;\r\n            }\r\n\r\n\r\n            elm.renderTo.insertBefore(elm, elm.renderTo.children[0].nextSibling)\r\n\r\n\r\n        } else this.elms[id].renderTo.appendChild(this.elms[id], null);\r\n\r\n        //END NOT FOR PROD\r\n\r\n        this.elms[id] = null;\r\n\r\n    }\r\n\r\n}\r\n\r\n/*\r\n    HOOKS\r\n*/\r\n\r\nafterConstruct(elm: TemplateElement) {\r\n\r\n    elm.afterConstruct ? elm.afterConstruct() : null;\r\n\r\n}\r\n\r\n/*\r\n*/\r\nonComplete: Function = () => { };\r\n\r\n}\r\n\r\nexport {data, pipe};","\r\n(Object:any).prototype.insertAfter = function (newNode:Element) { \r\n\tthis.parentNode.insertBefore(newNode, this.nextSibling); \r\n};\r\n","/* @flow */\r\n\r\n/*\r\n\tno_template :: fallback when no template applied\r\n*/\r\n\r\nexport default [\r\n\t{\r\n\t\ttype:`section`,\r\n\t\tstyle:`text-align:center;`,\r\n\t\tinnerHTML:`\r\n\t\t\t<p>No Template Loaded</p>\r\n\t\t`\r\n\t}\r\n];\r\n","//@flow\r\n\r\nimport \"./def/utils\";\r\n\r\nimport {data,pipe} from \"./def/pipe\";\r\n\r\nexport default {\r\n\t\"template\": {data,pipe},\r\n}\r\n","//@flow\r\n\r\nimport core from './core';\r\n\r\nexport default {\r\n  core,\r\n  name:'core'\r\n}\r\n"],"sourceRoot":""}