(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("async-template-library", [], factory);
	else if(typeof exports === 'object')
		exports["async-template-library"] = factory();
	else
		root["async-template-library"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3luYy10ZW1wbGF0ZS1saWJyYXJ5Ly4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanM/OTUyMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBfZGVmaW5lUHJvcGVydHk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/helpers/defineProperty.js\n");

/***/ }),

/***/ "./node_modules/loglevel/lib/loglevel.js":
/*!***********************************************!*\
  !*** ./node_modules/loglevel/lib/loglevel.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/loglevel/lib/loglevel.js\n");

/***/ }),

/***/ "./src/core/def/loop.js":
/*!******************************!*\
  !*** ./src/core/def/loop.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);\n\nlet _data = [];\n\nlet _loop_iterator;\n\nlet _length = 0;\nlet _iterator = 0;\nlet _iteratorId = 0;\nlet trace = 0;\n/**/\n\nlet _action = () => {};\n/**/\n\n\nconst _dataMap = [];\n/**/\n\nclass _template {\n  constructor(id, value) {\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"id\", void 0);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"value\", void 0);\n\n    this.id = id;\n    this.value = value;\n    return this;\n  }\n\n}\n/**/\n\n\nconst _dataTemplate = async function (i, data) {\n  return await (_dataMap[i] = await new _template(i, data));\n};\n/**/\n\n\nconst _layer = async function () {\n  _iteratorId++;\n  _data[_iterator] = await _dataTemplate(_iterator, _data[_iterator]);\n  return _data[_iterator];\n};\n/**/\n\n\nconst _loop = async function (data, action) {\n  if (_data === null) {\n    _loop_iterator = _data.length = 0;\n\n    for (_loop_iterator; _loop_iterator >= 0; _loop_iterator--) {\n      _data[_loop_iterator] = _dataTemplate(-1, {});\n    }\n  }\n\n  _data = data[0];\n  _length = _data.length || 0;\n  _action = action;\n\n  for (_iterator; _iterator < _length; _iterator++) {\n    await _action((await _layer()));\n  }\n\n  _iterator = 0;\n};\n/**/\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_loop);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3luYy10ZW1wbGF0ZS1saWJyYXJ5Ly4vc3JjL2NvcmUvZGVmL2xvb3AuanM/OTE5MyJdLCJuYW1lcyI6WyJfZGF0YSIsIl9sb29wX2l0ZXJhdG9yIiwiX2xlbmd0aCIsIl9pdGVyYXRvciIsIl9pdGVyYXRvcklkIiwidHJhY2UiLCJfYWN0aW9uIiwiX2RhdGFNYXAiLCJfdGVtcGxhdGUiLCJjb25zdHJ1Y3RvciIsImlkIiwidmFsdWUiLCJfZGF0YVRlbXBsYXRlIiwiaSIsImRhdGEiLCJfbGF5ZXIiLCJfbG9vcCIsImFjdGlvbiIsImxlbmd0aCJdLCJtYXBwaW5ncyI6Ijs7OztBQU1BLElBQUlBLEtBQVksR0FBRyxFQUFuQjs7QUFFQSxJQUFJQyxjQUFKOztBQUVBLElBQUlDLE9BQWUsR0FBRyxDQUF0QjtBQUNBLElBQUlDLFNBQWlCLEdBQUcsQ0FBeEI7QUFDQSxJQUFJQyxXQUFtQixHQUFHLENBQTFCO0FBRUEsSUFBSUMsS0FBWSxHQUFHLENBQW5CO0FBRUE7O0FBRUEsSUFBSUMsT0FBaUIsR0FBRyxNQUFNLENBQUcsQ0FBakM7QUFFQTs7O0FBRUEsTUFBTUMsUUFBbUIsR0FBRyxFQUE1QjtBQUVBOztBQUVBLE1BQU1DLFNBQU4sQ0FBZ0I7QUFHZkMsYUFBVyxDQUFDQyxFQUFELEVBQVlDLEtBQVosRUFBeUI7QUFBQTs7QUFBQTs7QUFDbkMsU0FBS0QsRUFBTCxHQUFVQSxFQUFWO0FBQ0EsU0FBS0MsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsV0FBUSxJQUFSO0FBQ0E7O0FBUGM7QUFVaEI7OztBQUVBLE1BQU1DLGFBQWEsR0FBRyxnQkFBZUMsQ0FBZixFQUF5QkMsSUFBekIsRUFBaUQ7QUFFdEUsU0FBTyxPQUFPUCxRQUFRLENBQUNNLENBQUQsQ0FBUixHQUFjLE1BQU0sSUFBSUwsU0FBSixDQUFjSyxDQUFkLEVBQWdCQyxJQUFoQixDQUEzQixDQUFQO0FBQ0EsQ0FIRDtBQUtBOzs7QUFFQSxNQUFNQyxNQUFNLEdBQUcsa0JBQXlCO0FBRXZDWCxhQUFXO0FBQ1hKLE9BQUssQ0FBQ0csU0FBRCxDQUFMLEdBQW1CLE1BQU9TLGFBQWEsQ0FBQ1QsU0FBRCxFQUFZSCxLQUFLLENBQUNHLFNBQUQsQ0FBakIsQ0FBdkM7QUFFQSxTQUFPSCxLQUFLLENBQUNHLFNBQUQsQ0FBWjtBQUNBLENBTkQ7QUFRQTs7O0FBRUEsTUFBTWEsS0FBSyxHQUFHLGdCQUFlRixJQUFmLEVBQWtDRyxNQUFsQyxFQUFtRDtBQUVoRSxNQUFJakIsS0FBSyxLQUFHLElBQVosRUFBaUI7QUFFaEJDLGtCQUFjLEdBQUdELEtBQUssQ0FBQ2tCLE1BQU4sR0FBZSxDQUFoQzs7QUFFQSxTQUFLakIsY0FBTCxFQUFxQkEsY0FBYyxJQUFJLENBQXZDLEVBQTBDQSxjQUFjLEVBQXhELEVBQTJEO0FBRTFERCxXQUFLLENBQUNDLGNBQUQsQ0FBTCxHQUF3QlcsYUFBYSxDQUFDLENBQUMsQ0FBRixFQUFJLEVBQUosQ0FBckM7QUFFQTtBQUVEOztBQUVEWixPQUFLLEdBQUdjLElBQUksQ0FBQyxDQUFELENBQVo7QUFDQVosU0FBTyxHQUFHRixLQUFLLENBQUNrQixNQUFOLElBQWdCLENBQTFCO0FBQ0FaLFNBQU8sR0FBR1csTUFBVjs7QUFFQSxPQUFJZCxTQUFKLEVBQWVBLFNBQVMsR0FBQ0QsT0FBekIsRUFBaUNDLFNBQVMsRUFBMUMsRUFBNkM7QUFFNUMsVUFBTUcsT0FBTyxFQUFDLE1BQU1TLE1BQU0sRUFBYixFQUFiO0FBRUE7O0FBRURaLFdBQVMsR0FBRyxDQUFaO0FBRUEsQ0ExQkQ7QUE0QkE7OztBQUVlYSxvRUFBZiIsImZpbGUiOiIuL3NyYy9jb3JlL2RlZi9sb29wLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9AZmxvd1xyXG5cclxuLypcclxuXHRzZWxmIGNvbnRhaW5lZCwgbG9vcFxyXG4qL1xyXG5cclxubGV0IF9kYXRhOl9fZGF0YSA9IFtdO1xyXG5cclxubGV0IF9sb29wX2l0ZXJhdG9yOiBudW1iZXI7XHJcblxyXG5sZXQgX2xlbmd0aDogbnVtYmVyID0gMDtcclxubGV0IF9pdGVyYXRvcjogbnVtYmVyID0gMDtcclxubGV0IF9pdGVyYXRvcklkOiBudW1iZXIgPSAwO1xyXG5cclxubGV0IHRyYWNlOm51bWJlciA9IDA7XHJcblxyXG4vKiovXHJcblxyXG5sZXQgX2FjdGlvbjogRnVuY3Rpb24gPSAoKSA9PiB7IH07XHJcblxyXG4vKiovXHJcblxyXG5jb25zdCBfZGF0YU1hcDogX19kYXRhTWFwID0gW107XHJcblxyXG4vKiovXHJcblxyXG5jbGFzcyBfdGVtcGxhdGUge1xyXG5cdGlkOm51bWJlcjtcclxuXHR2YWx1ZTpPYmplY3Q7XHJcblx0Y29uc3RydWN0b3IoaWQ6bnVtYmVyLCB2YWx1ZTpPYmplY3Qpe1xyXG5cdFx0dGhpcy5pZCA9IGlkO1xyXG5cdFx0dGhpcy52YWx1ZSA9IHZhbHVlO1xyXG5cdFx0cmV0dXJuICh0aGlzOl9fdGVtcGxhdGUpO1xyXG5cdH1cclxufVxyXG5cclxuLyoqL1xyXG5cclxuY29uc3QgX2RhdGFUZW1wbGF0ZSA9IGFzeW5jIGZ1bmN0aW9uKGk6bnVtYmVyLCBkYXRhOk9iamVjdCk6X190ZW1wbGF0ZSB7XHJcblxyXG5cdHJldHVybiBhd2FpdCAoX2RhdGFNYXBbaV0gPSBhd2FpdCBuZXcgX3RlbXBsYXRlKGksZGF0YSkpO1xyXG59XHJcblxyXG4vKiovXHJcblxyXG5jb25zdCBfbGF5ZXIgPSBhc3luYyBmdW5jdGlvbigpOl9fbGF5ZXIge1xyXG5cclxuXHRfaXRlcmF0b3JJZCsrO1xyXG5cdF9kYXRhW19pdGVyYXRvcl0gPSBhd2FpdCAoX2RhdGFUZW1wbGF0ZShfaXRlcmF0b3IsIF9kYXRhW19pdGVyYXRvcl0pKTtcclxuXHJcblx0cmV0dXJuIF9kYXRhW19pdGVyYXRvcl07XHJcbn1cclxuXHJcbi8qKi9cclxuXHJcbmNvbnN0IF9sb29wID0gYXN5bmMgZnVuY3Rpb24oZGF0YTpBcnJheTxfX2RhdGE+LGFjdGlvbjpGdW5jdGlvbikge1xyXG5cclxuXHRpZiAoX2RhdGE9PT1udWxsKXtcclxuXHJcblx0XHRfbG9vcF9pdGVyYXRvciA9IF9kYXRhLmxlbmd0aCA9IDA7XHJcblx0XHRcclxuXHRcdGZvciAoX2xvb3BfaXRlcmF0b3I7IF9sb29wX2l0ZXJhdG9yID49IDA7IF9sb29wX2l0ZXJhdG9yLS0pe1xyXG5cclxuXHRcdFx0X2RhdGFbX2xvb3BfaXRlcmF0b3JdID0gX2RhdGFUZW1wbGF0ZSgtMSx7fSk7XHJcblxyXG5cdFx0fVxyXG5cclxuXHR9XHJcblx0XHJcblx0X2RhdGEgPSBkYXRhWzBdOyBcclxuXHRfbGVuZ3RoID0gX2RhdGEubGVuZ3RoIHx8IDA7XHJcblx0X2FjdGlvbiA9IGFjdGlvbjtcclxuXHJcblx0Zm9yKF9pdGVyYXRvcjsgX2l0ZXJhdG9yPF9sZW5ndGg7X2l0ZXJhdG9yKyspe1xyXG5cclxuXHRcdGF3YWl0IF9hY3Rpb24oYXdhaXQgX2xheWVyKCkpO1xyXG5cclxuXHR9XHJcblxyXG5cdF9pdGVyYXRvciA9IDA7XHJcblxyXG59O1xyXG5cclxuLyoqL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgX2xvb3A7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/def/loop.js\n");

/***/ }),

/***/ "./src/core/def/pipe.js":
/*!******************************!*\
  !*** ./src/core/def/pipe.js ***!
  \******************************/
/*! exports provided: data, pipe, view, mvc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pipe\", function() { return pipe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"view\", function() { return view; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mvc\", function() { return mvc; });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _loop__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loop */ \"./src/core/def/loop.js\");\n/* harmony import */ var loglevel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! loglevel */ \"./node_modules/loglevel/lib/loglevel.js\");\n/* harmony import */ var loglevel__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(loglevel__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _template_empty_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../template/empty.data */ \"./src/core/template/empty.data.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"data\", function() { return _template_empty_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n\n\n\n\nlet trace = 0;\nconst _props = ['id', 'ref', 'value', 'class', 'className', 'click', 'mounted', 'onclick', 'onresize', 'oninput', 'activity', `innerHTML`];\n\nclass pipe {\n  constructor(template, pre = () => {}, post = () => {}) {\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"context\", document);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"template\", _template_empty_data__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"props\", _props);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"elms\", []);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"defer\", []);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"elements\", []);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"trace\", 0);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"scrollcount\", 0);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"createTemplateItem\", async item => {\n      const element = await this.createElementOfType(item.value);\n\n      if (element) {\n        this.elms[item.id] = this.elements[item.id] = element;\n        element.template = item.id;\n      } else {// if debugger warning true :: defered :: console.log('false')\n        //console.warn('aw',this);\n      }\n    });\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"check\", async temp => {\n      const id = temp.id;\n      let elm = this.elms[id];\n\n      if (elm && elm.renderTo) {\n        switch (typeof elm.renderTo) {\n          case \"string\":\n            let a = this.elms[id];\n            elm = this.elms[id] = await this.createElementOfType(a);\n            break;\n        }\n\n        this.scrollcount++; ///NOT FOR PROD\n\n        if (elm.renderTo.id == 'scroll') {\n          if (elm.renderTo.children.length == 0) {\n            elm.renderTo.appendChild(elm, null);\n            return;\n          }\n\n          elm.renderTo.appendBefore = (element, t) => {\n            element.parentNode.insertBefore(t, element);\n          };\n\n          elm.renderTo.appendAfter = (element, t) => {\n            element.parentNode.insertBefore(t, element.nextSibling);\n          }; //APPEND PLUS ( usually at end ) TAKEOUT\n\n\n          if (elm.id == \"plus\") {\n            elm.renderTo.appendBefore(elm.renderTo.children[0], elm);\n            return;\n          }\n\n          elm.renderTo.insertBefore(elm, elm.renderTo.children[0].nextSibling);\n        } else this.elms[id].renderTo.appendChild(this.elms[id], null);\n\n        if (this.elms[id].mounted) {\n          this.elms[id].mounted(temp, this);\n        } //END NOT FOR PROD\n\n\n        this.elms[id] = null;\n      }\n    });\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"mounted\", evt => {//console.log('eh', this, evt)\n    });\n\n    const ors = this.context.onreadystatechange;\n    this.context.state = 0;\n\n    if (this.context.readyState === \"complete\") {\n      if (ors) {\n        ors();\n      }\n\n      pre();\n      post();\n      this.template[0] = template;\n      this.init();\n      return;\n    }\n\n    this.context.onreadystatechange = async evt => {\n      if (ors) {\n        ors();\n      }\n\n      switch (this.context.state) {\n        case 0:\n          pre();\n          this.context.state++;\n          break;\n\n        case 1:\n          post();\n          this.context.state++;\n          this.template[0] = template;\n          this.init();\n          break;\n      }\n    };\n\n    return;\n  }\n\n  a() {\n    trace--;\n  }\n\n  async init() {\n    //trace = 0;\n    this.context = document;\n    return await this.iterateTemplate();\n  }\n\n  async update() {\n    await trace--;\n    this.defer.length = 0;\n    this.elms.length = 0;\n    this.template[0] = await window['async-2018-mvc'].entry.filter(elm => elm.id !== Number(elm.id));\n    await this.init();\n  }\n  /*\r\n      Iterate template data and generate html\r\n  */\n\n\n  async iterateTemplate() {\n    //log.info('iterateTemplate' + trace, this.template);\n    if (trace) {\n      loglevel__WEBPACK_IMPORTED_MODULE_2___default.a.warn(`renderer::` + trace);\n      loglevel__WEBPACK_IMPORTED_MODULE_2___default.a.warn(`renderer::` + trace);\n      return false;\n    }\n\n    trace++;\n    await Object(_loop__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.template, this.createTemplateItem);\n    await Object(_loop__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.template, this.check);\n    this.elms = await this.defer;\n    await Object(_loop__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([this.defer], this.createTemplateItem);\n    await Object(_loop__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.template, this.check);\n    this.elms = this.defer;\n\n    if ((this.defer = await this.elms.filter(elm => elm ? elm.ref : null)).length > 0) {\n      trace--;\n      this.template = await [this.defer];\n      this.defer = [];\n      this.elms = await [];\n      return await this.iterateTemplate();\n    } //trace--;\n\n\n    return true;\n  }\n  /*\r\n      Create a DOM element in memory\r\n  */\n\n\n  async createElementOfType(template) {\n    const type = template.type;\n\n    if (!type) {\n      loglevel__WEBPACK_IMPORTED_MODULE_2___default.a.warn('Async.2018 tried to render an `undefined` element');\n    }\n\n    const target = await this.createRenderTarget(template);\n\n    if (!target) {\n      loglevel__WEBPACK_IMPORTED_MODULE_2___default.a.warn('Async.2018 cannot find a target to render to');\n    }\n\n    const elm = await this.context.createElement(template.type);\n\n    if (!elm) {\n      loglevel__WEBPACK_IMPORTED_MODULE_2___default.a.warn('Async.2018 could not create element', template);\n    }\n\n    elm.ref = template.ref;\n    elm.afterConstruct = template.afterConstruct;\n\n    switch (type) {\n      case \"style\":\n        elm.innerHTML = template.value;\n        elm.renderTo = await this.context.head;\n        break;\n\n      default:\n        elm.oninput = template.oninput;\n\n        if (template.onclick) {\n          elm.onclick = evt => {\n            evt.stopPropagation();\n\n            if (typeof template.onclick == 'function') {\n              template.onclick();\n            } else {\n              console.warn('eval disabled');\n              eval(template.onclick);\n            }\n          };\n        }\n\n        elm.setAttribute(\"style\", template.style);\n        elm.value = template.value;\n        elm.renderTo = target;\n        break;\n    } //Defer template item\n\n\n    if (target === '2430') {\n      await this.defer.push(template);\n      return false;\n    } //Populate Props\n\n\n    await this.populateProps(this.props, template, elm); //EVENT HOOK: afterConstruct\n\n    this.afterConstruct(elm);\n    return elm;\n  }\n  /*\r\n      Generate a reference to the target element, or body if none\r\n  */\n\n\n  async createRenderTarget(template) {\n    //Verify if rendering target exists\n    if (template.renderTo != undefined) if (this.context.querySelectorAll(template.renderTo)[0] == undefined) {\n      return '2430';\n    } //Return querySelected element, fallback on body\n    //\t\tif (template.renderTo!=undefined)\n\n    return this.context.querySelectorAll(template.renderTo)[0] || this.context.body;\n  }\n  /*\r\n      Populate data props on elements\r\n  */\n\n\n  async populateProps(props, template, elm) {\n    for (let prop in props) {\n      const temp = props[prop];\n\n      if (template[temp]) {\n        elm[temp] = template[temp];\n      }\n    }\n  }\n  /*\r\n      Generate elements based on TemplateItem\r\n  */\n\n\n  /*\r\n      HOOKS\r\n  */\n  afterConstruct(elm) {\n    elm.afterConstruct ? elm.afterConstruct() : null;\n  }\n  /*\r\n  */\n\n\n}\n/**\r\n * controller for the async view\r\n */\n\n\nclass mvcc {\n  constructor() {\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"count\", 0);\n\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"append\", val => this.entry = val);\n\n    if (window['async-2018-mvc']) {\n      loglevel__WEBPACK_IMPORTED_MODULE_2___default.a.warn('DUPLICATE MVC INSTANCES');\n      return this;\n    }\n\n    return window['async-2018-mvc'] = this;\n  }\n\n  get entry() {\n    return mvcc.entries;\n  }\n\n  set entry(val) {\n    this.count++;\n    mvcc.entries.push(val);\n  }\n\n  get last() {\n    return mvcc.entries[this.count - 1];\n  } //append = (val) => log.debug(`async-2018 :: ./entry.js`, (this.entry = val));\n\n\n}\n/**\r\n * tooling functions\r\n */\n\n\n_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(mvcc, \"ref\", void 0);\n\n_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(mvcc, \"entries\", []);\n\nconst _c = new mvcc();\n\nconst _mvc = e => _c[e];\n\nconst _mvcCmd = e => _mvc(e);\n\nconst _mvcAppend = e => _mvcCmd('append')(e);\n\nconst _mvcLast = e => _mvcCmd('last');\n\nconst mvc = (e => {\n  return _c;\n})();\n\nclass view {\n  constructor(val) {\n    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, \"mvc\", mvc);\n\n    return this.assign(val);\n  }\n\n  assign(val) {\n    _mvcAppend(Object.assign({\n      ref: this,\n      type: 'template',\n      style: '',\n      id: 'undefined'\n    }, val));\n\n    return _mvcLast();\n  }\n\n  mounted() {}\n\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/core/def/pipe.js\n");

/***/ }),

/***/ "./src/core/def/utils.js":
/*!*******************************!*\
  !*** ./src/core/def/utils.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("Object.prototype.insertAfter = function (newNode) {\n  this.parentNode.insertBefore(newNode, this.nextSibling);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3luYy10ZW1wbGF0ZS1saWJyYXJ5Ly4vc3JjL2NvcmUvZGVmL3V0aWxzLmpzP2QzOTAiXSwibmFtZXMiOlsiT2JqZWN0IiwicHJvdG90eXBlIiwiaW5zZXJ0QWZ0ZXIiLCJuZXdOb2RlIiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSIsIm5leHRTaWJsaW5nIl0sIm1hcHBpbmdzIjoiQUFDQ0EsTUFBRCxDQUFhQyxTQUFiLENBQXVCQyxXQUF2QixHQUFxQyxVQUFVQyxPQUFWLEVBQTJCO0FBQy9ELE9BQUtDLFVBQUwsQ0FBZ0JDLFlBQWhCLENBQTZCRixPQUE3QixFQUFzQyxLQUFLRyxXQUEzQztBQUNBLENBRkQiLCJmaWxlIjoiLi9zcmMvY29yZS9kZWYvdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuKE9iamVjdDphbnkpLnByb3RvdHlwZS5pbnNlcnRBZnRlciA9IGZ1bmN0aW9uIChuZXdOb2RlOkVsZW1lbnQpIHsgXHJcblx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuZXdOb2RlLCB0aGlzLm5leHRTaWJsaW5nKTsgXHJcbn07XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/core/def/utils.js\n");

/***/ }),

/***/ "./src/core/index.js":
/*!***************************!*\
  !*** ./src/core/index.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _def_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./def/utils */ \"./src/core/def/utils.js\");\n/* harmony import */ var _def_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_def_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _def_pipe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./def/pipe */ \"./src/core/def/pipe.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  \"template\": {\n    data: _def_pipe__WEBPACK_IMPORTED_MODULE_1__[\"data\"],\n    pipe: _def_pipe__WEBPACK_IMPORTED_MODULE_1__[\"pipe\"],\n    view: _def_pipe__WEBPACK_IMPORTED_MODULE_1__[\"view\"],\n    mvc: _def_pipe__WEBPACK_IMPORTED_MODULE_1__[\"mvc\"]\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3luYy10ZW1wbGF0ZS1saWJyYXJ5Ly4vc3JjL2NvcmUvaW5kZXguanM/YzdiMiJdLCJuYW1lcyI6WyJkYXRhIiwicGlwZSIsInZpZXciLCJtdmMiXSwibWFwcGluZ3MiOiJBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUVBLCtEQUFlO0FBQ2QsY0FBWTtBQUFDQSx3REFBRDtBQUFNQyx3REFBTjtBQUFXQyx3REFBWDtBQUFnQkMsc0RBQUdBO0FBQW5CO0FBREUsQ0FBZiIsImZpbGUiOiIuL3NyYy9jb3JlL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9AZmxvd1xyXG5cclxuaW1wb3J0IFwiLi9kZWYvdXRpbHNcIjtcclxuXHJcbmltcG9ydCB7ZGF0YSxwaXBlLHZpZXcsbXZjfSBmcm9tIFwiLi9kZWYvcGlwZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG5cdFwidGVtcGxhdGVcIjoge2RhdGEscGlwZSx2aWV3LG12Y30sXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/core/index.js\n");

/***/ }),

/***/ "./src/core/template/empty.data.js":
/*!*****************************************!*\
  !*** ./src/core/template/empty.data.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\r\n\tno_template :: fallback when no template applied\r\n*/\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\n  type: `section`,\n  style: `text-align:center;`,\n  innerHTML: `\n\t\t\t<p>No Template Loaded</p>\n\t\t`\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3luYy10ZW1wbGF0ZS1saWJyYXJ5Ly4vc3JjL2NvcmUvdGVtcGxhdGUvZW1wdHkuZGF0YS5qcz9hNzFiIl0sIm5hbWVzIjpbInR5cGUiLCJzdHlsZSIsImlubmVySFRNTCJdLCJtYXBwaW5ncyI6IkFBRUE7QUFBQTs7O0FBSWUsZ0VBQ2Q7QUFDQ0EsTUFBSSxFQUFFLFNBRFA7QUFFQ0MsT0FBSyxFQUFFLG9CQUZSO0FBR0NDLFdBQVMsRUFBRTs7O0FBSFosQ0FEYyxDQUFmIiwiZmlsZSI6Ii4vc3JjL2NvcmUvdGVtcGxhdGUvZW1wdHkuZGF0YS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEBmbG93ICovXHJcblxyXG4vKlxyXG5cdG5vX3RlbXBsYXRlIDo6IGZhbGxiYWNrIHdoZW4gbm8gdGVtcGxhdGUgYXBwbGllZFxyXG4qL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgW1xyXG5cdHtcclxuXHRcdHR5cGU6YHNlY3Rpb25gLFxyXG5cdFx0c3R5bGU6YHRleHQtYWxpZ246Y2VudGVyO2AsXHJcblx0XHRpbm5lckhUTUw6YFxyXG5cdFx0XHQ8cD5ObyBUZW1wbGF0ZSBMb2FkZWQ8L3A+XHJcblx0XHRgXHJcblx0fVxyXG5dO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/core/template/empty.data.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core */ \"./src/core/index.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  core: _core__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  name: 'core'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc3luYy10ZW1wbGF0ZS1saWJyYXJ5Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwibmFtZXMiOlsiY29yZSIsIm5hbWUiXSwibWFwcGluZ3MiOiJBQUVBO0FBQUE7QUFBQTtBQUVlO0FBQ2JBLHFEQURhO0FBRWJDLE1BQUksRUFBQztBQUZRLENBQWYiLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL0BmbG93XHJcblxyXG5pbXBvcnQgY29yZSBmcm9tICcuL2NvcmUnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIGNvcmUsXHJcbiAgbmFtZTonY29yZSdcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ });
});